[{"/Users/yizhewang/Desktop/tensor-game/gestureRocognition/src/index.js":"1","/Users/yizhewang/Desktop/tensor-game/gestureRocognition/src/App.js":"2","/Users/yizhewang/Desktop/tensor-game/gestureRocognition/src/utils.js":"3"},{"size":219,"mtime":1609878548897,"results":"4","hashOfConfig":"5"},{"size":2346,"mtime":1609902857001,"results":"6","hashOfConfig":"5"},{"size":1146,"mtime":1609901040705,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"17j56s7",{"filePath":"11","messages":"12","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yizhewang/Desktop/tensor-game/gestureRocognition/src/index.js",[],["16","17"],"/Users/yizhewang/Desktop/tensor-game/gestureRocognition/src/App.js",["18","19","20","21","22"],"import React, { useRef, useState } from 'react';\n\nimport * as tf from '@tensorflow/tfjs';\nimport * as handpose from '@tensorflow-models/handpose';\nimport Webcam from 'react-webcam';\nimport { drawHand } from './utils';\nimport * as fp from 'fingerpose';\n\nimport './App.css';\n\nfunction App() {\n  const [emoji, setEmoji] = useState(null);\n  const victory = '✌';\n  const thumbsUp = '👍';\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const runHandpose = async () => {\n    const net = await handpose.load();\n    console.log('Handpose loaded');\n    setInterval(() => {\n      detect(net);\n    }, 100);\n  };\n\n  const detect = async (nnw) => {\n    if (\n      typeof webcamRef.current !== 'undefined' &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      const video = webcamRef.current.video;\n      const videoWidth = video.videoWidth;\n      const videoHeight = video.videoHeight;\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      const hand = await nnw.estimateHands(video);\n      console.log(hand);\n\n      if (hand.length > 0) {\n        const GE = new fp.GestureEstimator([\n          fp.Gestures.VictoryGesture,\n          fp.Gestures.ThumbsUpGesture,\n        ]);\n        const gesture = await GE.estimate(hand[0].landmarks, 8);\n        // 8 is a confidence level\n        console.log('gesture', gesture);\n      }\n\n      const ctx = canvasRef.current.getContext('2d');\n      drawHand(hand, ctx);\n    }\n  };\n  runHandpose();\n  return (\n    <div>\n      <header className='App-header'>\n        <Webcam\n          ref={webcamRef}\n          style={{\n            position: 'absolute',\n            margin: '0 auto',\n            left: 0,\n            right: 0,\n            textAlign: 'center',\n            zIndex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: 'absolute',\n            margin: '0 auto',\n            left: 0,\n            right: 0,\n            textAlign: 'center',\n            zIndex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/yizhewang/Desktop/tensor-game/gestureRocognition/src/utils.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":3,"column":13,"nodeType":"29","messageId":"30","endLine":3,"endColumn":15},{"ruleId":"27","severity":1,"message":"31","line":12,"column":10,"nodeType":"29","messageId":"30","endLine":12,"endColumn":15},{"ruleId":"27","severity":1,"message":"32","line":12,"column":17,"nodeType":"29","messageId":"30","endLine":12,"endColumn":25},{"ruleId":"27","severity":1,"message":"33","line":13,"column":9,"nodeType":"29","messageId":"30","endLine":13,"endColumn":16},{"ruleId":"27","severity":1,"message":"34","line":14,"column":9,"nodeType":"29","messageId":"30","endLine":14,"endColumn":17},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'tf' is defined but never used.","Identifier","unusedVar","'emoji' is assigned a value but never used.","'setEmoji' is assigned a value but never used.","'victory' is assigned a value but never used.","'thumbsUp' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]